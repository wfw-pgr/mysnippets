# -*- mode: snippet -*-
# name: flibdef-
# key: flibdef-
# expand-env: ((yas/indent-line 'fixed) (yas/wrap-around-region 'nil))
# --

import numpy            as np
import numpy.ctypeslib  as Flib
import ctypes, sys
import os.path

# ================================================================ #
# ===  ${1:func}                                               === #
# ================================================================ #
def $1( v1=None ):
    # ------------------------------------------------- #
    # --- [1]   引数チェック                        --- #
    # ------------------------------------------------- #
    if ( v1 is None ): sys.exit( "[$1] v1 ???" )

    # ------------------------------------------------- #
    # --- [2]   引数準備                            --- #
    # ------------------------------------------------- #
    
    #  -- [2-1] 使用する引数を準備                  --  #
    LI       = v1.shape[1]
    ret      = np.zeros( ( LI ) )
    flag     = True
    coord    = "RTZ"
    
    #  -- [2-2] Fortranサイズへ変換                 --  #
    v1_      =     np.array( v1  , dtype=np.float64  )
    LI_      = ctypes.byref( ctypes.c_int64( LI   )  )
    ret_     =     np.array( ret, dtype=np.float64   )
    flag_    =     np.array( flag , dtype=np.bool    )
    coord_   = coord.encode()

    # ------------------------------------------------- #
    # --- [3]   ライブラリをロード                  --- #
    # ------------------------------------------------- #
    
    #  -- [3-1] ライブラリを定義                    --  #

    pyLIB  = Flib.load_library( 'pylib.so', os.path.abspath( os.path.dirname(__file__) ) )
    
    #  -- [3-2] 入出力管理                          --  #
    pyLIB.$1_.argtypes = [
        Flib.ndpointer( dtype=np.float64 ),
        ctypes.POINTER( ctypes.c_int64   ),
        Flib.ndpointer( dtype=np.float64 ),
        ctypes.c_char_p                   ,
        Flib.ndpointer( dtype=np.bool    )
    ]
    pyLIB.$1_.restype = ctypes.c_void_p

    # ------------------------------------------------- #
    # --- [4]   関数呼出 / 返却                     --- #
    # ------------------------------------------------- #
    pyLIB.$1_( v1_, LI_, ret_, flag_, coord_ )
    return( ret_ )


# ================================================================ #
# ===  テスト用 呼び出し                                       === #
# ================================================================ #
if ( __name__=='__main__' ):
    $1()
$0